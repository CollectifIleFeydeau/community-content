{
  "version": 3,
  "sources": ["../../../src/direct-deploy.ts", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-kdPttX/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-kdPttX/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\Julien Fritsch\\Documents\\GitHub\\Collectif Feydeau -- community-content\\github-contribution-proxy\\.wrangler\\tmp\\dev-4yqfNd",
  "sourcesContent": ["/**\n * D\u00E9ploiement direct sur GitHub Pages (Feature Flag)\n * \n * Cette fonction permet de mettre \u00E0 jour directement gh-pages\n * sans passer par les workflows GitHub Actions\n */\n\ninterface DirectDeployEntry {\n  id: string;\n  type: string;\n  displayName: string;\n  content: string;\n  imageUrl?: string;\n  thumbnailUrl?: string;\n  description?: string;\n  timestamp: string;\n  moderation: {\n    status: 'approved' | 'pending' | 'rejected';\n    moderatedAt: string | null;\n  };\n}\n\n/**\n * Met \u00E0 jour directement le fichier community-content.json sur gh-pages\n */\nexport async function updateGitHubPagesDirect(entry: DirectDeployEntry, githubToken: string): Promise<boolean> {\n  try {\n    console.log('[DirectDeploy] D\u00E9marrage du d\u00E9ploiement direct pour:', entry.id);\n    \n    // 1. R\u00E9cup\u00E9rer le fichier actuel depuis gh-pages\n    const currentFileResponse = await fetch(\n      'https://api.github.com/repos/CollectifIleFeydeau/1Hall1Artiste/contents/data/community-content.json?ref=gh-pages',\n      {\n        headers: {\n          'Authorization': `token ${githubToken}`,\n          'Accept': 'application/vnd.github.v3+json',\n          'User-Agent': 'Cloudflare-Worker-DirectDeploy'\n        }\n      }\n    );\n\n    if (!currentFileResponse.ok) {\n      console.error('[DirectDeploy] Erreur r\u00E9cup\u00E9ration fichier:', currentFileResponse.status);\n      return false;\n    }\n\n    const currentFileData = await currentFileResponse.json() as { content: string; sha: string };\n    \n    // 2. D\u00E9coder et parser le contenu actuel\n    const currentContent = JSON.parse(atob(currentFileData.content));\n    \n    // 3. Ajouter la nouvelle entr\u00E9e au d\u00E9but\n    if (!currentContent.entries) {\n      currentContent.entries = [];\n    }\n    \n    // V\u00E9rifier si l'entr\u00E9e existe d\u00E9j\u00E0\n    const existingIndex = currentContent.entries.findIndex((e: any) => e.id === entry.id);\n    if (existingIndex >= 0) {\n      // Mettre \u00E0 jour l'entr\u00E9e existante\n      currentContent.entries[existingIndex] = entry;\n      console.log('[DirectDeploy] Entr\u00E9e mise \u00E0 jour:', entry.id);\n    } else {\n      // Ajouter nouvelle entr\u00E9e\n      currentContent.entries.unshift(entry);\n      console.log('[DirectDeploy] Nouvelle entr\u00E9e ajout\u00E9e:', entry.id);\n    }\n    \n    // Mettre \u00E0 jour le timestamp\n    currentContent.lastUpdated = new Date().toISOString();\n    \n    // 4. Encoder le nouveau contenu\n    const newContent = btoa(JSON.stringify(currentContent, null, 2));\n    \n    // 5. Commit sur gh-pages\n    const commitResponse = await fetch(\n      'https://api.github.com/repos/CollectifIleFeydeau/1Hall1Artiste/contents/data/community-content.json',\n      {\n        method: 'PUT',\n        headers: {\n          'Authorization': `token ${githubToken}`,\n          'Accept': 'application/vnd.github.v3+json',\n          'Content-Type': 'application/json',\n          'User-Agent': 'Cloudflare-Worker-DirectDeploy'\n        },\n        body: JSON.stringify({\n          message: `\uD83D\uDE80 Direct deploy: Add ${entry.type} \"${entry.displayName}\" [${entry.id}]`,\n          content: newContent,\n          sha: currentFileData.sha,\n          branch: 'gh-pages'\n        })\n      }\n    );\n\n    if (!commitResponse.ok) {\n      const errorText = await commitResponse.text();\n      console.error('[DirectDeploy] Erreur commit:', commitResponse.status, errorText);\n      return false;\n    }\n\n    console.log('[DirectDeploy] \u2705 D\u00E9ploiement direct r\u00E9ussi pour:', entry.id);\n    return true;\n    \n  } catch (error) {\n    console.error('[DirectDeploy] Erreur:', error);\n    return false;\n  }\n}\n\n/**\n * Supprime directement une entr\u00E9e du fichier community-content.json sur gh-pages\n */\nexport async function removeFromGitHubPagesDirect(entryId: string, githubToken: string): Promise<boolean> {\n  try {\n    console.log('[DirectDeploy] D\u00E9marrage de la suppression directe pour:', entryId);\n    \n    // 1. R\u00E9cup\u00E9rer le fichier actuel depuis gh-pages\n    const currentFileResponse = await fetch(\n      'https://api.github.com/repos/CollectifIleFeydeau/1Hall1Artiste/contents/data/community-content.json?ref=gh-pages',\n      {\n        headers: {\n          'Authorization': `token ${githubToken}`,\n          'Accept': 'application/vnd.github.v3+json',\n          'User-Agent': 'Cloudflare-Worker-DirectDeploy'\n        }\n      }\n    );\n\n    if (!currentFileResponse.ok) {\n      console.error('[DirectDeploy] Erreur r\u00E9cup\u00E9ration fichier:', currentFileResponse.status);\n      return false;\n    }\n\n    const currentFileData = await currentFileResponse.json() as { content: string; sha: string };\n    \n    // 2. D\u00E9coder et parser le contenu actuel\n    const currentContent = JSON.parse(atob(currentFileData.content));\n    \n    if (!currentContent.entries) {\n      console.log('[DirectDeploy] Aucune entr\u00E9e trouv\u00E9e');\n      return true; // Pas d'erreur, juste rien \u00E0 supprimer\n    }\n    \n    // 3. Trouver et marquer l'entr\u00E9e comme \"rejected\"\n    const entryIndex = currentContent.entries.findIndex((e: any) => e.id === entryId);\n    \n    if (entryIndex === -1) {\n      console.log('[DirectDeploy] Entr\u00E9e non trouv\u00E9e:', entryId);\n      return true; // Pas d'erreur, entr\u00E9e d\u00E9j\u00E0 supprim\u00E9e\n    }\n    \n    // Marquer comme rejected au lieu de supprimer compl\u00E8tement\n    currentContent.entries[entryIndex].moderation = {\n      status: 'rejected',\n      moderatedAt: new Date().toISOString()\n    };\n    \n    console.log('[DirectDeploy] Entr\u00E9e marqu\u00E9e comme rejected:', entryId);\n    \n    // Mettre \u00E0 jour le timestamp\n    currentContent.lastUpdated = new Date().toISOString();\n    \n    // 4. Encoder le nouveau contenu\n    const newContent = btoa(JSON.stringify(currentContent, null, 2));\n    \n    // 5. Commit sur gh-pages\n    const commitResponse = await fetch(\n      'https://api.github.com/repos/CollectifIleFeydeau/1Hall1Artiste/contents/data/community-content.json',\n      {\n        method: 'PUT',\n        headers: {\n          'Authorization': `token ${githubToken}`,\n          'Accept': 'application/vnd.github.v3+json',\n          'Content-Type': 'application/json',\n          'User-Agent': 'Cloudflare-Worker-DirectDeploy'\n        },\n        body: JSON.stringify({\n          message: `\uD83D\uDDD1\uFE0F Direct delete: Mark as rejected [${entryId}]`,\n          content: newContent,\n          sha: currentFileData.sha,\n          branch: 'gh-pages'\n        })\n      }\n    );\n\n    if (!commitResponse.ok) {\n      const errorText = await commitResponse.text();\n      console.error('[DirectDeploy] Erreur commit suppression:', commitResponse.status, errorText);\n      return false;\n    }\n\n    console.log('[DirectDeploy] \u2705 Suppression directe r\u00E9ussie pour:', entryId);\n    return true;\n    \n  } catch (error) {\n    console.error('[DirectDeploy] Erreur suppression:', error);\n    return false;\n  }\n}\n", "/**\n * Worker Cloudflare avec Feature Flag pour d\u00E9ploiement direct\n */\n\nimport { updateGitHubPagesDirect, removeFromGitHubPagesDirect } from './direct-deploy';\n\ninterface Env {\n  GITHUB_TOKEN: string;\n  ENABLE_DIRECT_DEPLOY?: string; // Feature flag: \"true\" pour activer\n}\n\ninterface CreateContributionData {\n  entry: {\n    id: string;\n    type: string;\n    displayName: string;\n    content: string;\n    imageUrl?: string;\n    description?: string;\n    timestamp: string;\n    moderation: {\n      status: 'approved' | 'pending' | 'rejected';\n      moderatedAt: string | null;\n    };\n  };\n  sessionId: string;\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    // CORS headers\n    const corsHeaders = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    };\n\n    // Handle preflight requests\n    if (request.method === 'OPTIONS') {\n      return new Response(null, { headers: corsHeaders });\n    }\n\n    try {\n      const url = new URL(request.url);\n      const path = url.pathname;\n\n      if (path === '/create-contribution' && request.method === 'POST') {\n        return await handleCreateContribution(request, env, corsHeaders);\n      }\n\n      if (path === '/delete-issue' && request.method === 'POST') {\n        return await handleDeleteIssue(request, env, corsHeaders);\n      }\n\n      return new Response('Not Found', { status: 404, headers: corsHeaders });\n      \n    } catch (error) {\n      console.error('Worker error:', error);\n      return new Response('Internal Server Error', { \n        status: 500, \n        headers: corsHeaders \n      });\n    }\n  },\n};\n\nasync function handleCreateContribution(request: Request, env: Env, corsHeaders: Record<string, string>): Promise<Response> {\n  try {\n    const data: CreateContributionData = await request.json();\n    const { entry } = data;\n\n    // \uD83D\uDE80 FEATURE FLAG: D\u00E9ploiement direct\n    const useDirectDeploy = env.ENABLE_DIRECT_DEPLOY === 'true';\n    \n    console.log(`[Worker] Mode d\u00E9ploiement: ${useDirectDeploy ? 'DIRECT' : 'WORKFLOW'}`);\n\n    // 1. Cr\u00E9er l'issue GitHub (toujours fait)\n    const issueResponse = await createGitHubIssue(entry, env.GITHUB_TOKEN);\n    \n    if (!issueResponse.success) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: issueResponse.error \n      }), {\n        status: 500,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n      });\n    }\n\n    // 2. Si feature flag activ\u00E9e, d\u00E9ployer directement\n    if (useDirectDeploy) {\n      console.log('[Worker] \uD83D\uDE80 D\u00E9ploiement direct activ\u00E9');\n      \n      const directDeploySuccess = await updateGitHubPagesDirect(\n        {\n          ...entry,\n          thumbnailUrl: entry.imageUrl // Utiliser la m\u00EAme URL pour thumbnail\n        }, \n        env.GITHUB_TOKEN\n      );\n\n      if (directDeploySuccess) {\n        console.log('[Worker] \u2705 D\u00E9ploiement direct r\u00E9ussi');\n        return new Response(JSON.stringify({\n          success: true,\n          message: 'Contribution cr\u00E9\u00E9e et d\u00E9ploy\u00E9e directement',\n          issueNumber: issueResponse.issueNumber,\n          deployMethod: 'direct'\n        }), {\n          headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n        });\n      } else {\n        console.log('[Worker] \u26A0\uFE0F D\u00E9ploiement direct \u00E9chou\u00E9, fallback sur workflow');\n      }\n    }\n\n    // 3. Fallback ou mode normal: utiliser les workflows\n    console.log('[Worker] \uD83D\uDCCB Utilisation des workflows GitHub Actions');\n    \n    return new Response(JSON.stringify({\n      success: true,\n      message: 'Contribution cr\u00E9\u00E9e avec succ\u00E8s',\n      issueNumber: issueResponse.issueNumber,\n      deployMethod: useDirectDeploy ? 'direct-fallback' : 'workflow'\n    }), {\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('[Worker] Erreur cr\u00E9ation contribution:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Erreur interne du serveur' \n    }), {\n      status: 500,\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function createGitHubIssue(entry: any, githubToken: string): Promise<{ success: boolean; issueNumber?: number; error?: string }> {\n  try {\n    const title = `${entry.type}: ${entry.displayName}`;\n    const body = `**Type:** ${entry.type}\n**Nom d'affichage:** ${entry.displayName}\n**Description:** ${entry.description || 'Aucune description'}\n**Contenu:** ${entry.content || ''}\n${entry.imageUrl ? `**Image:** ${entry.imageUrl}` : ''}\n**Timestamp:** ${entry.timestamp}\n**ID:** ${entry.id}`;\n\n    const response = await fetch('https://api.github.com/repos/CollectifIleFeydeau/community-content/issues', {\n      method: 'POST',\n      headers: {\n        'Authorization': `token ${githubToken}`,\n        'Accept': 'application/vnd.github.v3+json',\n        'Content-Type': 'application/json',\n        'User-Agent': 'Cloudflare-Worker-CollectifFeydeau'\n      },\n      body: JSON.stringify({\n        title,\n        body,\n        labels: ['contribution', entry.type.toLowerCase()]\n      })\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      return { success: false, error: `GitHub API Error: ${response.status} ${errorText}` };\n    }\n\n    const issueData = await response.json() as { number: number };\n    return { success: true, issueNumber: issueData.number };\n\n  } catch (error) {\n    return { success: false, error: `Network error: ${error}` };\n  }\n}\n\nasync function handleDeleteIssue(request: Request, env: Env, corsHeaders: Record<string, string>): Promise<Response> {\n  try {\n    const requestData = await request.json() as { issueNumber: string };\n    const { issueNumber } = requestData;\n\n    // \uD83D\uDE80 FEATURE FLAG: Suppression directe\n    const useDirectDeploy = env.ENABLE_DIRECT_DEPLOY === 'true';\n    \n    console.log(`[Worker] Mode suppression: ${useDirectDeploy ? 'DIRECT' : 'WORKFLOW'}`);\n\n    // 1. Fermer l'issue GitHub (toujours fait)\n    const response = await fetch(`https://api.github.com/repos/CollectifIleFeydeau/community-content/issues/${issueNumber}`, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': `token ${env.GITHUB_TOKEN}`,\n        'Accept': 'application/vnd.github.v3+json',\n        'Content-Type': 'application/json',\n        'User-Agent': 'Cloudflare-Worker-CollectifFeydeau'\n      },\n      body: JSON.stringify({\n        state: 'closed'\n      })\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `Erreur ${response.status}: ${errorText}` \n      }), {\n        status: response.status,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n      });\n    }\n\n    // 2. Si feature flag activ\u00E9e, supprimer directement\n    if (useDirectDeploy) {\n      console.log('[Worker] \uD83D\uDDD1\uFE0F Suppression directe activ\u00E9e');\n      \n      // Extraire l'ID de l'entr\u00E9e depuis le num\u00E9ro d'issue\n      const entryId = `issue-${issueNumber}`;\n      \n      const directDeleteSuccess = await removeFromGitHubPagesDirect(entryId, env.GITHUB_TOKEN);\n\n      if (directDeleteSuccess) {\n        console.log('[Worker] \u2705 Suppression directe r\u00E9ussie');\n        return new Response(JSON.stringify({\n          success: true,\n          message: `Issue #${issueNumber} ferm\u00E9e et supprim\u00E9e directement`,\n          deleteMethod: 'direct'\n        }), {\n          headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n        });\n      } else {\n        console.log('[Worker] \u26A0\uFE0F Suppression directe \u00E9chou\u00E9e, fallback sur workflow');\n      }\n    }\n\n    // 3. Fallback ou mode normal: utiliser les workflows\n    console.log('[Worker] \uD83D\uDCCB Utilisation des workflows GitHub Actions');\n\n    return new Response(JSON.stringify({\n      success: true,\n      message: `Issue #${issueNumber} ferm\u00E9e avec succ\u00E8s`,\n      deleteMethod: useDirectDeploy ? 'direct-fallback' : 'workflow'\n    }), {\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('[Worker] Erreur suppression:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Erreur interne du serveur' \n    }), {\n      status: 500,\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\Julien Fritsch\\\\Documents\\\\GitHub\\\\Collectif Feydeau -- community-content\\\\github-contribution-proxy\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\Julien Fritsch\\\\Documents\\\\GitHub\\\\Collectif Feydeau -- community-content\\\\github-contribution-proxy\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\Julien Fritsch\\\\Documents\\\\GitHub\\\\Collectif Feydeau -- community-content\\\\github-contribution-proxy\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\Julien Fritsch\\\\Documents\\\\GitHub\\\\Collectif Feydeau -- community-content\\\\github-contribution-proxy\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\Julien Fritsch\\\\Documents\\\\GitHub\\\\Collectif Feydeau -- community-content\\\\github-contribution-proxy\\\\.wrangler\\\\tmp\\\\bundle-kdPttX\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\Julien Fritsch\\\\Documents\\\\GitHub\\\\Collectif Feydeau -- community-content\\\\github-contribution-proxy\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\Julien Fritsch\\\\Documents\\\\GitHub\\\\Collectif Feydeau -- community-content\\\\github-contribution-proxy\\\\.wrangler\\\\tmp\\\\bundle-kdPttX\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\Julien Fritsch\\\\Documents\\\\GitHub\\\\Collectif Feydeau -- community-content\\\\github-contribution-proxy\\\\.wrangler\\\\tmp\\\\bundle-kdPttX\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
