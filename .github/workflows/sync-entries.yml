name: Synchronize Issues to entries.json

on:
  issues:
    types: [opened, closed]  # Réduire aux événements essentiels
  workflow_dispatch:  # Permet de déclencher manuellement le workflow

# Éviter les exécutions concurrentes sur la même branche
concurrency:
  group: sync-entries-${{ github.ref }}
  cancel-in-progress: false  # Ne pas annuler, attendre la fin

jobs:
  sync-entries:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Nécessaire pour pousser des modifications
      issues: read     # Nécessaire pour lire les issues

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Récupérer tout l'historique

      - name: Pull latest changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin main

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Synchronize issues to entries.json
        run: node .github/scripts/sync-issues.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add entries.json
          if ! git diff --staged --quiet; then
            git commit -m "Update entries.json from GitHub issues [skip ci]"
            git pull --rebase origin main || true
            git push origin main
          else
            echo "No changes to commit"
          fi
